char opname1[][5] = {  "NEG",  "???",  "???",  "COM",  "LSR",  "???",  "ROR",  "ASR",   "LSL",  "ROL",  "DEC",  "???",  "INC",  "TST",  "JMP",  "CLR",   "???",  "???",  "NOP",  "SYNC", "???",  "???",  "LBRA", "LBSR",  "???",  "DAA",  "ORC",  "???",  "ANDC", "SEX",  "EXG",  "TFR",   "BRA",  "BRN",  "BHI",  "BLS",  "BCC",  "BCS",  "BNE",  "BEQ",   "BVC",  "BVS",  "BPL",  "BMI",  "BGE",  "BLT",  "BGT",  "BLE",   "LEAX", "LEAY", "LEAS", "LEAU", "PSHS", "PULS", "PSHU", "PULU",  "???",  "RTS",  "ABX",  "RTI",  "CWAI", "MUL",  "???",  "SWI",   "NEGA", "???",  "???",  "COMA", "LSRA", "???",  "RORA", "ASRA",  "LSLA", "ROLA", "DECA", "???",  "INCA", "TSTA", "???",  "CLRA",  "NEGB", "???",  "???",  "COMB", "LSRB", "???",  "RORB", "ASRB",  "LSLB", "ROLB", "DECB", "???",  "INCB", "TSTB", "???",  "CLRB",  "NEG",  "???",  "???",  "COM",  "LSR",  "???",  "ROR",  "ASR",   "LSL",  "ROL",  "DEC",  "???",  "INC",  "TST",  "JMP",  "CLR",   "NEG",  "???",  "???",  "COM",  "LSR",  "???",  "ROR",  "ASR",   "LSL",  "ROL",  "DEC",  "???",  "INC",  "TST",  "JMP",  "CLR",   "SUBA", "CMPA", "SBCA", "SUBD", "ANDA", "BITA", "LDA",  "???",   "EORA", "ADCA", "ORA",  "ADDA", "CMPX", "BSR",  "LDX",  "???",   "SUBA", "CMPA", "SBCA", "SUBD", "ANDA", "BITA", "LDA",  "STA",   "EORA", "ADCA", "ORA",  "ADDA", "CMPX", "JSR",  "LDX",  "STX",   "SUBA", "CMPA", "SBCA", "SUBD", "ANDA", "BITA", "LDA",  "STA",   "EORA", "ADCA", "ORA",  "ADDA", "CMPX", "JSR",  "LDX",  "STX",   "SUBA", "CMPA", "SBCA", "SUBD", "ANDA", "BITA", "LDA",  "STA",   "EORA", "ADCA", "ORA",  "ADDA", "CMPX", "JSR",  "LDX",  "STX",   "SUBB", "CMPB", "SBCB", "ADDD", "ANDB", "BITB", "LDB",  "???",   "EORB", "ADCB", "ORB",  "ADDB", "LDD",  "???",  "LDU",  "???",   "SUBB", "CMPB", "SBCB", "ADDD", "ANDB", "BITB", "LDB",  "STB",   "EORB", "ADCB", "ORB",  "ADDB", "LDD",  "STD",  "LDU",  "STU",   "SUBB", "CMPB", "SBCB", "ADDD", "ANDB", "BITB", "LDB",  "STB",   "EORB", "ADCB", "ORB",  "ADDB", "LDD",  "STD",  "LDU",  "STU",   "SUBB", "CMPB", "SBCB", "ADDD", "ANDB", "BITB", "LDB",  "STB",   "EORB", "ADCB", "ORB",  "ADDB", "LDD",  "STD",  "LDU",  "STU"  };char opname2[][5] = {  "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "LBRN", "LBHI", "LBLS", "LBCC", "LBCS", "LBNE", "LBEQ",  "LBVC", "LBVS", "LBPL", "LBMI", "LBGE", "LBLT", "LBGT", "LBLE",  "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "SWI2",  "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "CMPD", "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "CMPY", "???",  "LDY",  "???",   "???",  "???",  "???",  "CMPD", "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "CMPY", "???",  "LDY",  "STY",   "???",  "???",  "???",  "CMPD", "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "CMPY", "???",  "LDY",  "STY",   "???",  "???",  "???",  "CMPD", "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "CMPY", "???",  "LDY",  "STY",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "LDS",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "LDS",  "STS",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "LDS",  "STS",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "LDS",  "STS"  };char opname3[][5] = {  "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "SWI3",  "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "CMPU", "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "CMPS", "???",  "???",  "???",   "???",  "???",  "???",  "CMPU", "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "CMPS", "???",  "???",  "???",   "???",  "???",  "???",  "CMPU", "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "CMPS", "???",  "???",  "???",   "???",  "???",  "???",  "CMPU", "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "CMPS", "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???",   "???",  "???",  "???",  "???",  "???",  "???",  "???",  "???"  };char opname4[][5] = {  "???",  "NOP",  "???",  "???",  "???",  "???",  "TAP",  "TPA",   "INX",  "DEX",  "CLV",  "SEV",  "CLC",  "SEC",  "CLI",  "SEI",   "SBA",  "CBA",  "???",  "???",  "???",  "???",  "TAB",  "TBA",   "???",  "DAA",  "???",  "ABA",  "???",  "???",  "???",  "???",   "BRA",  "???",  "BHI",  "BLS",  "BCC",  "BCS",  "BNE",  "BEQ",   "BVC",  "BVS",  "BPL",  "BMI",  "BGE",  "BLT",  "BGT",  "BLE",   "TSX",  "INS",  "PLAA", "PLAB", "DES",  "TXS",  "PSHA", "PSHB",   "???",  "RTS",  "???",  "RTI",  "???",  "???",  "WAI",  "SWI",  "NEGA", "???",  "???",  "COMA", "LSRA", "???",  "RORA", "ASRA",   "ASLA", "ROLA", "DECA", "???",  "INCA", "TSTA", "???",  "CLRA",   "NEGB", "???",  "???",  "COMB", "LSRB", "???",  "RORB", "ASRB",   "ASLB", "ROLB", "DECB", "???",  "INCB", "TSTB", "???",  "CLRB",   "NEG",  "???",  "???",  "COM",  "LSR",  "???",  "ROR",  "ASR",  "ASL",  "ROL",  "DEC",  "???",  "INC",  "TST",  "JMP",  "CLR",   "NEG",  "???",  "???",  "COM",  "LSR",  "???",  "ROR",  "ASR",  "ASL",  "ROL",  "DEC",  "???",  "INC",  "TST",  "JMP",  "CLR",   "SUBA", "CMPA", "SBCA", "???",  "ANDA", "BITA", "LDAA", "???",   "EORA", "ADCA", "ORAA", "ADDA", "CPX",  "BSR",  "LDS",  "???",   "SUBA", "CMPA", "SBCA", "???",  "ANDA", "BITA", "LDAA", "STAA",   "EORA", "ADCA", "ORAA", "ADDA", "CPX",  "???",  "LDS",  "STS",   "SUBA", "CMPA", "SBCA", "???",  "ANDA", "BITA", "LDAA", "STAA",   "EORA", "ADCA", "ORAA", "ADDA", "CPX",  "JSR",  "LDS",  "STS",   "SUBA", "CMPA", "SBCA", "???",  "ANDA", "BITA", "LDAA", "STAA",   "EORA", "ADCA", "ORAA", "ADDA", "CPX",  "JSR",  "LDS",  "STS",   "SUBB", "CMPB", "SBCB", "???",  "ANDB", "BITB", "LDAB", "???",   "EORB", "ADCB", "ORAB", "ADDB", "???",  "???",  "LDX",  "???",   "SUBB", "CMPB", "SBCB", "???",  "ANDB", "BITB", "LDAB", "STAB",   "EORB", "ADCB", "ORAB", "ADDB", "???",  "???",  "LDX",  "STX",   "SUBB", "CMPB", "SBCB", "???",  "ANDB", "BITB", "LDAB", "STAB",   "EORB", "ADCB", "ORAB", "ADDB", "???",  "???",  "LDX",  "STX",   "SUBB", "CMPB", "SBCB", "???",  "ANDB", "BITB", "LDAB", "STAB",   "EORB", "ADCB", "ORAB", "ADDB", "???",  "???",  "LDX",  "STX"   };/*	 0 = inherent	 1 = short immediate	 2 = extended	 3 = direct	 4 = indexed	 5 = short relative	 6 = long relative	 7 = register list	 8 = long immediate	 9 = undefined	10 = CWAI mask	11 = EXG/TFR register postbyte	12 = 6800 indexed */char addressing1[] = {  3, 9, 9, 3, 3, 9, 3, 3, 3, 3, 3, 9, 3, 3, 3, 3,  9, 9, 0, 0, 9, 9, 6, 6, 9, 0, 1, 9, 1, 0,11,11,  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,  4, 4, 4, 4, 7, 7, 7, 7, 9, 0, 0, 0,10, 0, 9, 0,  0, 9, 9, 0, 0, 9, 0, 0, 0, 0, 0, 9, 0, 0, 9, 0,  0, 9, 9, 0, 0, 9, 0, 0, 0, 0, 0, 9, 0, 0, 9, 0,  4, 9, 9, 4, 4, 9, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4,  2, 9, 9, 2, 2, 9, 2, 2, 2, 2, 2, 9, 2, 2, 2, 2,  1, 1, 1, 8, 1, 1, 1, 9, 1, 1, 1, 1, 8, 5, 8, 9,  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1, 1, 1, 8, 1, 1, 1, 9, 1, 1, 1, 1, 8, 9, 8, 9,  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2  };char addressing2[] = {  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 8, 9, 8, 9,  9, 9, 9, 3, 9, 9, 9, 9, 9, 9, 9, 9, 3, 9, 3, 3,  9, 9, 9, 4, 9, 9, 9, 9, 9, 9, 9, 9, 4, 9, 4, 4,  9, 9, 9, 2, 9, 9, 9, 9, 9, 9, 9, 9, 2, 9, 2, 2,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 3, 3,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 4, 4,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 2, 2  };char addressing3[] = {  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 8, 9, 9, 9,  9, 9, 9, 3, 9, 9, 9, 9, 9, 9, 9, 9, 3, 9, 9, 9,  9, 9, 9, 4, 9, 9, 9, 9, 9, 9, 9, 9, 4, 9, 9, 9,  9, 9, 9, 2, 9, 9, 9, 9, 9, 9, 9, 9, 2, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9  };char addressing4[] = {  9, 0, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 9, 9, 9, 9, 0, 0, 9, 0, 9, 0, 9, 9, 9, 9,  5, 9, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,  0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 9, 0, 9, 9, 0, 0,  0, 9, 9, 0, 0, 9, 0, 0, 0, 0, 0, 9, 0, 0, 9, 0,  0, 9, 9, 0, 0, 9, 0, 0, 0, 0, 0, 9, 0, 0, 9, 0, 12, 9, 9,12,12, 9,12,12,12,12,12, 9,12,12,12,12,  2, 9, 9, 2, 2, 9, 2, 2, 2, 2, 2, 9, 2, 2, 2, 2,  1, 1, 1, 9, 1, 1, 1, 9, 1, 1, 1, 1, 8, 5, 8, 9,  3, 3, 3, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 3, 3, 12,12,12, 9,12,12,12,12,12,12,12,12,12,12,12,12,  2, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1, 1, 1, 9, 1, 1, 1, 9, 1, 1, 1, 1, 9, 9, 8, 9,  3, 3, 3, 9, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 12,12,12, 9,12,12,12,12,12,12,12,12, 9, 9,12,12,  2, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 2, 2  };int addressing_length[] = { 0, 1, 2, 1, 1, 1, 2, 1, 2, 0, 1, 1, 1 };/*	 0 = increment by 1	 1 = increment by 2	 2 = decrement by 1	 3 = decrement by 2	 4 = no offset from R	 5 = B offset from R	 6 = A offset from R	 7 = undefined	 8 = 8 bit offset from R	 9 = 16 bit offset from R	10 = undefined	11 = D offset from R	12 = 8 bit offset from PC	13 = 16 bit offset from PC	14 = undefined	15 = extended indirect	16 = 5 bit offset from R */int indexing_length[] = {  0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 1, 2, 0, 2, 0  };char indexing_regname[][2] = { "X", "Y", "U", "S" };char stack_regname[][3] = { "CC", "A", "B", "DP", "X", "Y", "U", "PC" };char CWAI_bitname[][3] = { "C", "V", "Z", "N", "I", "H", "F", "E" };char EXG_regname[][3] = {  "D", "X", "Y", "US", "SP", "PC", "??", "??",  "A", "B", "CC", "DP", "??", "??", "??", "??"  };